var searchIndex={};
searchIndex["filters"] = {"doc":"A library for constructing predicates and filters for…","i":[[0,"impl_traits","filters","",null,null],[0,"filter","","The filter implementation",null,null],[8,"IntoFilter","filters::filter","Trait for converting something into a Filter",null,null],[16,"IntoFilt","","",0,null],[10,"into_filter","","",0,[[]]],[8,"Filter","","The filter trait",null,null],[10,"filter","","The function which is used to filter something",1,[[["self"],["n"]],["bool"]]],[11,"not","","Helper to invert a filter.",1,[[],["not"]]],[11,"or","","Helper to connect two filters via logical OR",1,[[["f"]],["or"]]],[11,"or_not","","Helper to connect two filters via logical OR and NOT",1,[[["f"]],[["not"],["or",["not"]]]]],[11,"or3","","Helper to connect three filters via logical OR",1,[[["f"],["f2"]],[["or",["or"]],["or"]]]],[11,"nor","","Helper to connect two filters via logical NOR",1,[[["f"]],[["or"],["not",["or"]]]]],[11,"xor","","Helper to connect two filters via logical XOR",1,[[["f"]],["xor"]]],[11,"and","","Helper to connect two filters via logical AND",1,[[["f"]],["and"]]],[11,"and3","","Helper to connect three filters via logical AND",1,[[["f"],["f2"]],[["and"],["and",["and"]]]]],[11,"and_not","","Helper to connect two filters via logical AND and NOT",1,[[["f"]],[["not"],["and",["not"]]]]],[11,"nand","","Helper to connect two filters via logical NAND",1,[[["f"]],[["not",["and"]],["and"]]]],[11,"map_input","","Helper to transform the input of a filter",1,[[["m"]],["mapinput"]]],[11,"into_failable","","Helper to transform a filter into a FailableFilter",1,[[],["intofailable"]]],[0,"failable","filters","",null,null],[0,"filter","filters::failable","",null,null],[8,"IntoFailableFilter","filters::failable::filter","Trait for converting something into a Filter",null,null],[16,"IntoFilt","","",2,null],[10,"into_failable_filter","","",2,[[]]],[8,"FailableFilter","","",null,null],[16,"Error","","",3,null],[10,"filter","","The function which is used to filter something",3,[[["self"],["n"]],[["result",["bool"]],["bool"]]]],[11,"not","","Helper to invert a filter.",3,[[],["failablenot"]]],[11,"or","","Helper to connect two filters via logical OR",3,[[["f"]],["failableor"]]],[11,"or_not","","Helper to connect two filters via logical OR and NOT",3,[[["f"]],[["failablenot"],["failableor",["failablenot"]]]]],[11,"or3","","Helper to connect three filters via logical OR",3,[[["f"],["f2"]],[["failableor"],["failableor",["failableor"]]]]],[11,"nor","","Helper to connect two filters via logical NOR",3,[[["f"]],[["failablenot",["failableor"]],["failableor"]]]],[11,"xor","","Helper to connect two filters via logical XOR",3,[[["f"]],["failablexor"]]],[11,"and","","Helper to connect two filters via logical AND",3,[[["f"]],["failableand"]]],[11,"and3","","Helper to connect three filters via logical AND",3,[[["f"],["f2"]],[["failableand",["failableand"]],["failableand"]]]],[11,"and_not","","Helper to connect two filters via logical AND and NOT",3,[[["f"]],[["failableand",["failablenot"]],["failablenot"]]]],[11,"nand","","Helper to connect two filters via logical NAND",3,[[["f"]],[["failableand"],["failablenot",["failableand"]]]]],[11,"map_input","","Helper to transform the input of a filter",3,[[["m"]],["failablemapinput"]]],[11,"map_err","","Helper to transform the input of a filter",3,[[["m"]],["failablemaperr"]]],[0,"ops","filters::failable","",null,null],[0,"and","filters::failable::ops","AND implementation.",null,null],[3,"FailableAnd","filters::failable::ops::and","",null,null],[11,"new","","",4,[[["u"],["t"]],["failableand"]]],[0,"bool","filters::failable::ops","FailableBool Filter implementation, so we can insert this…",null,null],[3,"FailableBool","filters::failable::ops::bool","",null,null],[11,"new","","",5,[[["bool"]],["failablebool"]]],[0,"not","filters::failable::ops","NOT implementation.",null,null],[3,"FailableNot","filters::failable::ops::not","",null,null],[11,"new","","",6,[[["t"]],["failablenot"]]],[0,"xor","filters::failable::ops","XOR implementation.",null,null],[3,"FailableXOr","filters::failable::ops::xor","",null,null],[11,"new","","",7,[[["u"],["t"]],["failablexor"]]],[0,"or","filters::failable::ops","OR implementation.",null,null],[3,"FailableOr","filters::failable::ops::or","",null,null],[11,"new","","",8,[[["u"],["t"]],["failableor"]]],[0,"map","filters::failable::ops","Map implementation.",null,null],[3,"FailableMapInput","filters::failable::ops::map","",null,null],[3,"FailableMapErr","","",null,null],[11,"new","","",9,[[["m"],["f"]],["failablemapinput"]]],[11,"new","","",10,[[["m"],["f"]],["failablemaperr"]]],[0,"iter","filters","",null,null],[3,"FilteredIterator","filters::iter","",null,null],[3,"FilterOksIter","","",null,null],[3,"FilterErrIter","","",null,null],[8,"FilterWith","","",null,null],[10,"filter_with","","",11,[[["f"]],["filterediterator"]]],[8,"FilterOks","","",null,null],[10,"filter_oks","","",12,[[["f"]],["filteroksiter"]]],[8,"FilterErr","","",null,null],[10,"filter_errs","","",13,[[["f"]],["filtererriter"]]],[0,"ops","filters","",null,null],[0,"and","filters::ops","AND implementation.",null,null],[3,"And","filters::ops::and","",null,null],[11,"new","","",14,[[["u"],["t"]],["and"]]],[0,"bool","filters::ops","Bool Filter implementation, so we can insert this in…",null,null],[3,"Bool","filters::ops::bool","",null,null],[11,"new","","",15,[[["bool"]],["bool"]]],[0,"not","filters::ops","NOT implementation.",null,null],[3,"Not","filters::ops::not","",null,null],[11,"new","","",16,[[["t"]],["not"]]],[0,"or","filters::ops","OR implementation.",null,null],[3,"Or","filters::ops::or","",null,null],[11,"new","","",17,[[["u"],["t"]],["or"]]],[0,"xor","filters::ops","XOR implementation.",null,null],[3,"XOr","filters::ops::xor","",null,null],[11,"new","","",18,[[["u"],["t"]],["xor"]]],[0,"map","filters::ops","Map implementation.",null,null],[3,"MapInput","filters::ops::map","",null,null],[11,"new","","",19,[[["m"],["f"]],["mapinput"]]],[0,"failable","filters::ops","Filter -> FailableFilter implementations",null,null],[3,"IntoFailable","filters::ops::failable","",null,null],[3,"AsFailable","","",null,null],[11,"new","","",20,[[["f"]],["intofailable"]]],[11,"new","","",21,[[["f"]],["asfailable"]]],[14,"impl_operators","filters","Creates operator implementations for a Filter struct…",null,null],[14,"impl_failable_operators","","Variant of impl_operators!() macro for FailableFilter types",null,null],[14,"make_filter","","",null,null],[11,"into_failable_filter","filters::failable::ops::and","",4,[[]]],[11,"filter","","",4,[[["i"],["self"]],[["result",["bool"]],["bool"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"into_failable_filter","filters::failable::ops::bool","",5,[[]]],[11,"filter","","",5,[[["i"],["self"]],[["result",["bool"]],["bool"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"into_failable_filter","filters::failable::ops::not","",6,[[]]],[11,"filter","","",6,[[["i"],["self"]],[["result",["bool"]],["bool"]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"into_failable_filter","filters::failable::ops::xor","",7,[[]]],[11,"filter","","",7,[[["i"],["self"]],[["result",["bool"]],["bool"]]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"into_failable_filter","filters::failable::ops::or","",8,[[]]],[11,"filter","","",8,[[["i"],["self"]],[["result",["bool"]],["bool"]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"into_failable_filter","filters::failable::ops::map","",9,[[]]],[11,"filter","","",9,[[["i"],["self"]],[["result",["bool"]],["bool"]]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"into_failable_filter","","",10,[[]]],[11,"filter","","",10,[[["i"],["self"]],[["result",["bool"]],["bool"]]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"filter_with","filters::iter","",22,[[["f"]],["filterediterator"]]],[11,"filter_oks","","",22,[[["f"]],["filteroksiter"]]],[11,"filter_errs","","",22,[[["f"]],["filtererriter"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"into_iter","","",22,[[],["i"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"filter_with","","",23,[[["f"]],["filterediterator"]]],[11,"filter_oks","","",23,[[["f"]],["filteroksiter"]]],[11,"filter_errs","","",23,[[["f"]],["filtererriter"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"into_iter","","",23,[[],["i"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"filter_with","","",24,[[["f"]],["filterediterator"]]],[11,"filter_oks","","",24,[[["f"]],["filteroksiter"]]],[11,"filter_errs","","",24,[[["f"]],["filtererriter"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"into_iter","","",24,[[],["i"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"into_filter","filters::ops::and","",14,[[],["i"]]],[11,"filter","","",14,[[["i"],["self"]],["bool"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"into_filter","filters::ops::bool","",15,[[],["i"]]],[11,"filter","","",15,[[["i"],["self"]],["bool"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"into_filter","filters::ops::not","",16,[[],["i"]]],[11,"filter","","",16,[[["i"],["self"]],["bool"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"into_filter","filters::ops::or","",17,[[],["i"]]],[11,"filter","","",17,[[["i"],["self"]],["bool"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"into_filter","filters::ops::xor","",18,[[],["i"]]],[11,"filter","","",18,[[["i"],["self"]],["bool"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"into_filter","filters::ops::map","",19,[[],["i"]]],[11,"filter","","",19,[[["i"],["self"]],["bool"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"into_failable_filter","filters::ops::failable","",20,[[]]],[11,"filter","","",20,[[["i"],["self"]],[["result",["bool"]],["bool"]]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"into_failable_filter","","",21,[[]]],[11,"filter","","",21,[[["i"],["self"]],[["result",["bool"]],["bool"]]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"filter","filters::ops::and","",14,[[["i"],["self"]],["bool"]]],[11,"filter","filters::ops::bool","",15,[[["i"],["self"]],["bool"]]],[11,"filter","filters::ops::not","",16,[[["i"],["self"]],["bool"]]],[11,"filter","filters::ops::or","",17,[[["i"],["self"]],["bool"]]],[11,"filter","filters::ops::xor","",18,[[["i"],["self"]],["bool"]]],[11,"filter","filters::ops::map","",19,[[["t"],["self"]],["bool"]]],[11,"filter","filters::failable::ops::and","",4,[[["self"],["n"]],[["result",["bool"]],["bool"]]]],[11,"filter","filters::failable::ops::bool","",5,[[["self"],["n"]],[["result",["bool"]],["bool"]]]],[11,"filter","filters::failable::ops::not","",6,[[["self"],["n"]],[["result",["bool"]],["bool"]]]],[11,"filter","filters::failable::ops::xor","",7,[[["self"],["n"]],[["result",["bool"]],["bool"]]]],[11,"filter","filters::failable::ops::or","",8,[[["self"],["n"]],[["result",["bool"]],["bool"]]]],[11,"filter","filters::failable::ops::map","",9,[[["t"],["self"]],[["result",["bool"]],["bool"]]]],[11,"filter","","",10,[[["t"],["self"]],[["result",["bool"]],["bool"]]]],[11,"filter","filters::ops::failable","",20,[[["self"],["n"]],[["result",["bool"]],["bool"]]]],[11,"filter","","",21,[[["self"],["n"]],[["result",["bool"]],["bool"]]]],[11,"from","filters::failable::ops::bool","",5,[[["bool"]],["failablebool"]]],[11,"from","filters::ops::bool","",15,[[["bool"]],["bool"]]],[11,"next","filters::iter","",22,[[["self"]],["option"]]],[11,"next","","",23,[[["self"]],["option"]]],[11,"next","","",24,[[["self"]],["option"]]],[11,"clone","filters::failable::ops::and","",4,[[["self"]],["failableand"]]],[11,"clone","filters::failable::ops::bool","",5,[[["self"]],["failablebool"]]],[11,"clone","filters::failable::ops::not","",6,[[["self"]],["failablenot"]]],[11,"clone","filters::failable::ops::xor","",7,[[["self"]],["failablexor"]]],[11,"clone","filters::failable::ops::or","",8,[[["self"]],["failableor"]]],[11,"clone","filters::failable::ops::map","",9,[[["self"]],["failablemapinput"]]],[11,"clone","","",10,[[["self"]],["failablemaperr"]]],[11,"clone","filters::ops::and","",14,[[["self"]],["and"]]],[11,"clone","filters::ops::bool","",15,[[["self"]],["bool"]]],[11,"clone","filters::ops::not","",16,[[["self"]],["not"]]],[11,"clone","filters::ops::or","",17,[[["self"]],["or"]]],[11,"clone","filters::ops::xor","",18,[[["self"]],["xor"]]],[11,"clone","filters::ops::map","",19,[[["self"]],["mapinput"]]],[11,"clone","filters::ops::failable","",20,[[["self"]],["intofailable"]]],[11,"clone","","",21,[[["self"]],["asfailable"]]]],"p":[[8,"IntoFilter"],[8,"Filter"],[8,"IntoFailableFilter"],[8,"FailableFilter"],[3,"FailableAnd"],[3,"FailableBool"],[3,"FailableNot"],[3,"FailableXOr"],[3,"FailableOr"],[3,"FailableMapInput"],[3,"FailableMapErr"],[8,"FilterWith"],[8,"FilterOks"],[8,"FilterErr"],[3,"And"],[3,"Bool"],[3,"Not"],[3,"Or"],[3,"XOr"],[3,"MapInput"],[3,"IntoFailable"],[3,"AsFailable"],[3,"FilteredIterator"],[3,"FilterOksIter"],[3,"FilterErrIter"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);